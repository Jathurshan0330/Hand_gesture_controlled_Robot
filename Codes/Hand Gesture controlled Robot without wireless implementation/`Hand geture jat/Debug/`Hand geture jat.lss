
`Hand geture jat.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000cd8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005c  00800060  00000cd8  00000d6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  008000bc  008000bc  00000dc8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000dc8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000df8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000e34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a34  00000000  00000000  00000efc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000702  00000000  00000000  00002930  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c24  00000000  00000000  00003032  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  00003c58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000468  00000000  00000000  00003e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bce  00000000  00000000  00004284  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00004e52  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ed       	ldi	r30, 0xD8	; 216
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 3b       	cpi	r26, 0xBC	; 188
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ac eb       	ldi	r26, 0xBC	; 188
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 3c       	cpi	r26, 0xC8	; 200
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 aa 02 	call	0x554	; 0x554 <main>
  8a:	0c 94 6a 06 	jmp	0xcd4	; 0xcd4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <pinChange+0x6>
  96:	9f c0       	rjmp	.+318    	; 0x1d6 <pinChange+0x144>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	11 f4       	brne	.+4      	; 0xa0 <pinChange+0xe>
  9c:	d8 98       	cbi	0x1b, 0	; 27
  9e:	08 95       	ret
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	91 05       	cpc	r25, r1
  a4:	11 f4       	brne	.+4      	; 0xaa <pinChange+0x18>
  a6:	d9 98       	cbi	0x1b, 1	; 27
  a8:	08 95       	ret
  aa:	82 30       	cpi	r24, 0x02	; 2
  ac:	91 05       	cpc	r25, r1
  ae:	11 f4       	brne	.+4      	; 0xb4 <pinChange+0x22>
  b0:	da 98       	cbi	0x1b, 2	; 27
  b2:	08 95       	ret
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	91 05       	cpc	r25, r1
  b8:	11 f4       	brne	.+4      	; 0xbe <pinChange+0x2c>
  ba:	db 98       	cbi	0x1b, 3	; 27
  bc:	08 95       	ret
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	91 05       	cpc	r25, r1
  c2:	11 f4       	brne	.+4      	; 0xc8 <pinChange+0x36>
  c4:	dc 98       	cbi	0x1b, 4	; 27
  c6:	08 95       	ret
  c8:	85 30       	cpi	r24, 0x05	; 5
  ca:	91 05       	cpc	r25, r1
  cc:	11 f4       	brne	.+4      	; 0xd2 <pinChange+0x40>
  ce:	dd 98       	cbi	0x1b, 5	; 27
  d0:	08 95       	ret
  d2:	86 30       	cpi	r24, 0x06	; 6
  d4:	91 05       	cpc	r25, r1
  d6:	11 f4       	brne	.+4      	; 0xdc <pinChange+0x4a>
  d8:	de 98       	cbi	0x1b, 6	; 27
  da:	08 95       	ret
  dc:	87 30       	cpi	r24, 0x07	; 7
  de:	91 05       	cpc	r25, r1
  e0:	11 f4       	brne	.+4      	; 0xe6 <pinChange+0x54>
  e2:	df 98       	cbi	0x1b, 7	; 27
  e4:	08 95       	ret
  e6:	8a 30       	cpi	r24, 0x0A	; 10
  e8:	91 05       	cpc	r25, r1
  ea:	11 f4       	brne	.+4      	; 0xf0 <pinChange+0x5e>
  ec:	c0 98       	cbi	0x18, 0	; 24
  ee:	08 95       	ret
  f0:	8b 30       	cpi	r24, 0x0B	; 11
  f2:	91 05       	cpc	r25, r1
  f4:	11 f4       	brne	.+4      	; 0xfa <pinChange+0x68>
  f6:	c1 98       	cbi	0x18, 1	; 24
  f8:	08 95       	ret
  fa:	8c 30       	cpi	r24, 0x0C	; 12
  fc:	91 05       	cpc	r25, r1
  fe:	11 f4       	brne	.+4      	; 0x104 <pinChange+0x72>
 100:	c2 98       	cbi	0x18, 2	; 24
 102:	08 95       	ret
 104:	8d 30       	cpi	r24, 0x0D	; 13
 106:	91 05       	cpc	r25, r1
 108:	11 f4       	brne	.+4      	; 0x10e <pinChange+0x7c>
 10a:	c3 98       	cbi	0x18, 3	; 24
 10c:	08 95       	ret
 10e:	8e 30       	cpi	r24, 0x0E	; 14
 110:	91 05       	cpc	r25, r1
 112:	11 f4       	brne	.+4      	; 0x118 <pinChange+0x86>
 114:	c4 98       	cbi	0x18, 4	; 24
 116:	08 95       	ret
 118:	8f 30       	cpi	r24, 0x0F	; 15
 11a:	91 05       	cpc	r25, r1
 11c:	11 f4       	brne	.+4      	; 0x122 <pinChange+0x90>
 11e:	c5 98       	cbi	0x18, 5	; 24
 120:	08 95       	ret
 122:	80 31       	cpi	r24, 0x10	; 16
 124:	91 05       	cpc	r25, r1
 126:	11 f4       	brne	.+4      	; 0x12c <pinChange+0x9a>
 128:	c6 98       	cbi	0x18, 6	; 24
 12a:	08 95       	ret
 12c:	81 31       	cpi	r24, 0x11	; 17
 12e:	91 05       	cpc	r25, r1
 130:	11 f4       	brne	.+4      	; 0x136 <pinChange+0xa4>
 132:	c7 98       	cbi	0x18, 7	; 24
 134:	08 95       	ret
 136:	84 31       	cpi	r24, 0x14	; 20
 138:	91 05       	cpc	r25, r1
 13a:	11 f4       	brne	.+4      	; 0x140 <pinChange+0xae>
 13c:	a8 98       	cbi	0x15, 0	; 21
 13e:	08 95       	ret
 140:	85 31       	cpi	r24, 0x15	; 21
 142:	91 05       	cpc	r25, r1
 144:	11 f4       	brne	.+4      	; 0x14a <pinChange+0xb8>
 146:	a9 98       	cbi	0x15, 1	; 21
 148:	08 95       	ret
 14a:	86 31       	cpi	r24, 0x16	; 22
 14c:	91 05       	cpc	r25, r1
 14e:	11 f4       	brne	.+4      	; 0x154 <pinChange+0xc2>
 150:	aa 98       	cbi	0x15, 2	; 21
 152:	08 95       	ret
 154:	87 31       	cpi	r24, 0x17	; 23
 156:	91 05       	cpc	r25, r1
 158:	11 f4       	brne	.+4      	; 0x15e <pinChange+0xcc>
 15a:	ab 98       	cbi	0x15, 3	; 21
 15c:	08 95       	ret
 15e:	88 31       	cpi	r24, 0x18	; 24
 160:	91 05       	cpc	r25, r1
 162:	11 f4       	brne	.+4      	; 0x168 <pinChange+0xd6>
 164:	ac 98       	cbi	0x15, 4	; 21
 166:	08 95       	ret
 168:	89 31       	cpi	r24, 0x19	; 25
 16a:	91 05       	cpc	r25, r1
 16c:	11 f4       	brne	.+4      	; 0x172 <pinChange+0xe0>
 16e:	ad 98       	cbi	0x15, 5	; 21
 170:	08 95       	ret
 172:	8a 31       	cpi	r24, 0x1A	; 26
 174:	91 05       	cpc	r25, r1
 176:	11 f4       	brne	.+4      	; 0x17c <pinChange+0xea>
 178:	ae 98       	cbi	0x15, 6	; 21
 17a:	08 95       	ret
 17c:	8b 31       	cpi	r24, 0x1B	; 27
 17e:	91 05       	cpc	r25, r1
 180:	11 f4       	brne	.+4      	; 0x186 <pinChange+0xf4>
 182:	af 98       	cbi	0x15, 7	; 21
 184:	08 95       	ret
 186:	8e 31       	cpi	r24, 0x1E	; 30
 188:	91 05       	cpc	r25, r1
 18a:	11 f4       	brne	.+4      	; 0x190 <pinChange+0xfe>
 18c:	90 98       	cbi	0x12, 0	; 18
 18e:	08 95       	ret
 190:	8f 31       	cpi	r24, 0x1F	; 31
 192:	91 05       	cpc	r25, r1
 194:	11 f4       	brne	.+4      	; 0x19a <pinChange+0x108>
 196:	91 98       	cbi	0x12, 1	; 18
 198:	08 95       	ret
 19a:	80 32       	cpi	r24, 0x20	; 32
 19c:	91 05       	cpc	r25, r1
 19e:	11 f4       	brne	.+4      	; 0x1a4 <pinChange+0x112>
 1a0:	92 98       	cbi	0x12, 2	; 18
 1a2:	08 95       	ret
 1a4:	81 32       	cpi	r24, 0x21	; 33
 1a6:	91 05       	cpc	r25, r1
 1a8:	11 f4       	brne	.+4      	; 0x1ae <pinChange+0x11c>
 1aa:	93 98       	cbi	0x12, 3	; 18
 1ac:	08 95       	ret
 1ae:	82 32       	cpi	r24, 0x22	; 34
 1b0:	91 05       	cpc	r25, r1
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <pinChange+0x126>
 1b4:	94 98       	cbi	0x12, 4	; 18
 1b6:	08 95       	ret
 1b8:	83 32       	cpi	r24, 0x23	; 35
 1ba:	91 05       	cpc	r25, r1
 1bc:	11 f4       	brne	.+4      	; 0x1c2 <pinChange+0x130>
 1be:	95 98       	cbi	0x12, 5	; 18
 1c0:	08 95       	ret
 1c2:	84 32       	cpi	r24, 0x24	; 36
 1c4:	91 05       	cpc	r25, r1
 1c6:	11 f4       	brne	.+4      	; 0x1cc <pinChange+0x13a>
 1c8:	96 98       	cbi	0x12, 6	; 18
 1ca:	08 95       	ret
 1cc:	85 97       	sbiw	r24, 0x25	; 37
 1ce:	09 f0       	breq	.+2      	; 0x1d2 <pinChange+0x140>
 1d0:	9f c0       	rjmp	.+318    	; 0x310 <pinChange+0x27e>
 1d2:	97 98       	cbi	0x12, 7	; 18
 1d4:	08 95       	ret
 1d6:	00 97       	sbiw	r24, 0x00	; 0
 1d8:	11 f4       	brne	.+4      	; 0x1de <pinChange+0x14c>
 1da:	d8 9a       	sbi	0x1b, 0	; 27
 1dc:	08 95       	ret
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	91 05       	cpc	r25, r1
 1e2:	11 f4       	brne	.+4      	; 0x1e8 <pinChange+0x156>
 1e4:	d9 9a       	sbi	0x1b, 1	; 27
 1e6:	08 95       	ret
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	91 05       	cpc	r25, r1
 1ec:	11 f4       	brne	.+4      	; 0x1f2 <pinChange+0x160>
 1ee:	da 9a       	sbi	0x1b, 2	; 27
 1f0:	08 95       	ret
 1f2:	83 30       	cpi	r24, 0x03	; 3
 1f4:	91 05       	cpc	r25, r1
 1f6:	11 f4       	brne	.+4      	; 0x1fc <pinChange+0x16a>
 1f8:	db 9a       	sbi	0x1b, 3	; 27
 1fa:	08 95       	ret
 1fc:	84 30       	cpi	r24, 0x04	; 4
 1fe:	91 05       	cpc	r25, r1
 200:	11 f4       	brne	.+4      	; 0x206 <pinChange+0x174>
 202:	dc 9a       	sbi	0x1b, 4	; 27
 204:	08 95       	ret
 206:	85 30       	cpi	r24, 0x05	; 5
 208:	91 05       	cpc	r25, r1
 20a:	11 f4       	brne	.+4      	; 0x210 <pinChange+0x17e>
 20c:	dd 9a       	sbi	0x1b, 5	; 27
 20e:	08 95       	ret
 210:	86 30       	cpi	r24, 0x06	; 6
 212:	91 05       	cpc	r25, r1
 214:	11 f4       	brne	.+4      	; 0x21a <pinChange+0x188>
 216:	de 9a       	sbi	0x1b, 6	; 27
 218:	08 95       	ret
 21a:	87 30       	cpi	r24, 0x07	; 7
 21c:	91 05       	cpc	r25, r1
 21e:	11 f4       	brne	.+4      	; 0x224 <pinChange+0x192>
 220:	df 9a       	sbi	0x1b, 7	; 27
 222:	08 95       	ret
 224:	8a 30       	cpi	r24, 0x0A	; 10
 226:	91 05       	cpc	r25, r1
 228:	11 f4       	brne	.+4      	; 0x22e <pinChange+0x19c>
 22a:	c0 9a       	sbi	0x18, 0	; 24
 22c:	08 95       	ret
 22e:	8b 30       	cpi	r24, 0x0B	; 11
 230:	91 05       	cpc	r25, r1
 232:	11 f4       	brne	.+4      	; 0x238 <pinChange+0x1a6>
 234:	c1 9a       	sbi	0x18, 1	; 24
 236:	08 95       	ret
 238:	8c 30       	cpi	r24, 0x0C	; 12
 23a:	91 05       	cpc	r25, r1
 23c:	11 f4       	brne	.+4      	; 0x242 <pinChange+0x1b0>
 23e:	c2 9a       	sbi	0x18, 2	; 24
 240:	08 95       	ret
 242:	8d 30       	cpi	r24, 0x0D	; 13
 244:	91 05       	cpc	r25, r1
 246:	11 f4       	brne	.+4      	; 0x24c <pinChange+0x1ba>
 248:	c3 9a       	sbi	0x18, 3	; 24
 24a:	08 95       	ret
 24c:	8e 30       	cpi	r24, 0x0E	; 14
 24e:	91 05       	cpc	r25, r1
 250:	11 f4       	brne	.+4      	; 0x256 <pinChange+0x1c4>
 252:	c4 9a       	sbi	0x18, 4	; 24
 254:	08 95       	ret
 256:	8f 30       	cpi	r24, 0x0F	; 15
 258:	91 05       	cpc	r25, r1
 25a:	11 f4       	brne	.+4      	; 0x260 <pinChange+0x1ce>
 25c:	c5 9a       	sbi	0x18, 5	; 24
 25e:	08 95       	ret
 260:	80 31       	cpi	r24, 0x10	; 16
 262:	91 05       	cpc	r25, r1
 264:	11 f4       	brne	.+4      	; 0x26a <pinChange+0x1d8>
 266:	c6 9a       	sbi	0x18, 6	; 24
 268:	08 95       	ret
 26a:	81 31       	cpi	r24, 0x11	; 17
 26c:	91 05       	cpc	r25, r1
 26e:	11 f4       	brne	.+4      	; 0x274 <pinChange+0x1e2>
 270:	c7 9a       	sbi	0x18, 7	; 24
 272:	08 95       	ret
 274:	84 31       	cpi	r24, 0x14	; 20
 276:	91 05       	cpc	r25, r1
 278:	11 f4       	brne	.+4      	; 0x27e <pinChange+0x1ec>
 27a:	a8 9a       	sbi	0x15, 0	; 21
 27c:	08 95       	ret
 27e:	85 31       	cpi	r24, 0x15	; 21
 280:	91 05       	cpc	r25, r1
 282:	11 f4       	brne	.+4      	; 0x288 <pinChange+0x1f6>
 284:	a9 9a       	sbi	0x15, 1	; 21
 286:	08 95       	ret
 288:	86 31       	cpi	r24, 0x16	; 22
 28a:	91 05       	cpc	r25, r1
 28c:	11 f4       	brne	.+4      	; 0x292 <pinChange+0x200>
 28e:	aa 9a       	sbi	0x15, 2	; 21
 290:	08 95       	ret
 292:	87 31       	cpi	r24, 0x17	; 23
 294:	91 05       	cpc	r25, r1
 296:	11 f4       	brne	.+4      	; 0x29c <pinChange+0x20a>
 298:	ab 9a       	sbi	0x15, 3	; 21
 29a:	08 95       	ret
 29c:	88 31       	cpi	r24, 0x18	; 24
 29e:	91 05       	cpc	r25, r1
 2a0:	11 f4       	brne	.+4      	; 0x2a6 <pinChange+0x214>
 2a2:	ac 9a       	sbi	0x15, 4	; 21
 2a4:	08 95       	ret
 2a6:	89 31       	cpi	r24, 0x19	; 25
 2a8:	91 05       	cpc	r25, r1
 2aa:	11 f4       	brne	.+4      	; 0x2b0 <pinChange+0x21e>
 2ac:	ad 9a       	sbi	0x15, 5	; 21
 2ae:	08 95       	ret
 2b0:	8a 31       	cpi	r24, 0x1A	; 26
 2b2:	91 05       	cpc	r25, r1
 2b4:	11 f4       	brne	.+4      	; 0x2ba <pinChange+0x228>
 2b6:	ae 9a       	sbi	0x15, 6	; 21
 2b8:	08 95       	ret
 2ba:	8b 31       	cpi	r24, 0x1B	; 27
 2bc:	91 05       	cpc	r25, r1
 2be:	11 f4       	brne	.+4      	; 0x2c4 <pinChange+0x232>
 2c0:	af 9a       	sbi	0x15, 7	; 21
 2c2:	08 95       	ret
 2c4:	8e 31       	cpi	r24, 0x1E	; 30
 2c6:	91 05       	cpc	r25, r1
 2c8:	11 f4       	brne	.+4      	; 0x2ce <pinChange+0x23c>
 2ca:	90 9a       	sbi	0x12, 0	; 18
 2cc:	08 95       	ret
 2ce:	8f 31       	cpi	r24, 0x1F	; 31
 2d0:	91 05       	cpc	r25, r1
 2d2:	11 f4       	brne	.+4      	; 0x2d8 <pinChange+0x246>
 2d4:	91 9a       	sbi	0x12, 1	; 18
 2d6:	08 95       	ret
 2d8:	80 32       	cpi	r24, 0x20	; 32
 2da:	91 05       	cpc	r25, r1
 2dc:	11 f4       	brne	.+4      	; 0x2e2 <pinChange+0x250>
 2de:	92 9a       	sbi	0x12, 2	; 18
 2e0:	08 95       	ret
 2e2:	81 32       	cpi	r24, 0x21	; 33
 2e4:	91 05       	cpc	r25, r1
 2e6:	11 f4       	brne	.+4      	; 0x2ec <pinChange+0x25a>
 2e8:	93 9a       	sbi	0x12, 3	; 18
 2ea:	08 95       	ret
 2ec:	82 32       	cpi	r24, 0x22	; 34
 2ee:	91 05       	cpc	r25, r1
 2f0:	11 f4       	brne	.+4      	; 0x2f6 <pinChange+0x264>
 2f2:	94 9a       	sbi	0x12, 4	; 18
 2f4:	08 95       	ret
 2f6:	83 32       	cpi	r24, 0x23	; 35
 2f8:	91 05       	cpc	r25, r1
 2fa:	11 f4       	brne	.+4      	; 0x300 <pinChange+0x26e>
 2fc:	95 9a       	sbi	0x12, 5	; 18
 2fe:	08 95       	ret
 300:	84 32       	cpi	r24, 0x24	; 36
 302:	91 05       	cpc	r25, r1
 304:	11 f4       	brne	.+4      	; 0x30a <pinChange+0x278>
 306:	96 9a       	sbi	0x12, 6	; 18
 308:	08 95       	ret
 30a:	85 97       	sbiw	r24, 0x25	; 37
 30c:	09 f4       	brne	.+2      	; 0x310 <pinChange+0x27e>
 30e:	97 9a       	sbi	0x12, 7	; 18
 310:	08 95       	ret

00000312 <Lcd4_Port>:
 312:	cf 93       	push	r28
 314:	c8 2f       	mov	r28, r24
 316:	80 ff       	sbrs	r24, 0
 318:	07 c0       	rjmp	.+14     	; 0x328 <Lcd4_Port+0x16>
 31a:	61 e0       	ldi	r22, 0x01	; 1
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	8e e0       	ldi	r24, 0x0E	; 14
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 326:	06 c0       	rjmp	.+12     	; 0x334 <Lcd4_Port+0x22>
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	8e e0       	ldi	r24, 0x0E	; 14
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 334:	c1 ff       	sbrs	r28, 1
 336:	07 c0       	rjmp	.+14     	; 0x346 <Lcd4_Port+0x34>
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	8f e0       	ldi	r24, 0x0F	; 15
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 344:	06 c0       	rjmp	.+12     	; 0x352 <Lcd4_Port+0x40>
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	8f e0       	ldi	r24, 0x0F	; 15
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 352:	c2 ff       	sbrs	r28, 2
 354:	07 c0       	rjmp	.+14     	; 0x364 <Lcd4_Port+0x52>
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	80 e1       	ldi	r24, 0x10	; 16
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 362:	06 c0       	rjmp	.+12     	; 0x370 <Lcd4_Port+0x5e>
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	80 e1       	ldi	r24, 0x10	; 16
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 370:	c3 ff       	sbrs	r28, 3
 372:	07 c0       	rjmp	.+14     	; 0x382 <Lcd4_Port+0x70>
 374:	61 e0       	ldi	r22, 0x01	; 1
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	81 e1       	ldi	r24, 0x11	; 17
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 380:	06 c0       	rjmp	.+12     	; 0x38e <Lcd4_Port+0x7c>
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	81 e1       	ldi	r24, 0x11	; 17
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 38e:	cf 91       	pop	r28
 390:	08 95       	ret

00000392 <Lcd4_Cmd>:
 392:	cf 93       	push	r28
 394:	c8 2f       	mov	r28, r24
 396:	60 e0       	ldi	r22, 0x00	; 0
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	80 e2       	ldi	r24, 0x20	; 32
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3a2:	8c 2f       	mov	r24, r28
 3a4:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 3a8:	61 e0       	ldi	r22, 0x01	; 1
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	82 e2       	ldi	r24, 0x22	; 34
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3b4:	8f ec       	ldi	r24, 0xCF	; 207
 3b6:	97 e0       	ldi	r25, 0x07	; 7
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <Lcd4_Cmd+0x26>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <Lcd4_Cmd+0x2c>
 3be:	00 00       	nop
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	82 e2       	ldi	r24, 0x22	; 34
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3cc:	8f ec       	ldi	r24, 0xCF	; 207
 3ce:	97 e0       	ldi	r25, 0x07	; 7
 3d0:	01 97       	sbiw	r24, 0x01	; 1
 3d2:	f1 f7       	brne	.-4      	; 0x3d0 <Lcd4_Cmd+0x3e>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <Lcd4_Cmd+0x44>
 3d6:	00 00       	nop
 3d8:	cf 91       	pop	r28
 3da:	08 95       	ret

000003dc <Lcd4_Clear>:
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3e8:	08 95       	ret

000003ea <Lcd4_Set_Cursor>:
 3ea:	cf 93       	push	r28
 3ec:	c6 2f       	mov	r28, r22
 3ee:	81 30       	cpi	r24, 0x01	; 1
 3f0:	59 f4       	brne	.+22     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3f2:	80 e8       	ldi	r24, 0x80	; 128
 3f4:	86 0f       	add	r24, r22
 3f6:	82 95       	swap	r24
 3f8:	8f 70       	andi	r24, 0x0F	; 15
 3fa:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3fe:	8c 2f       	mov	r24, r28
 400:	8f 70       	andi	r24, 0x0F	; 15
 402:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 406:	0c c0       	rjmp	.+24     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 408:	82 30       	cpi	r24, 0x02	; 2
 40a:	51 f4       	brne	.+20     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 40c:	80 ec       	ldi	r24, 0xC0	; 192
 40e:	86 0f       	add	r24, r22
 410:	82 95       	swap	r24
 412:	8f 70       	andi	r24, 0x0F	; 15
 414:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 418:	8c 2f       	mov	r24, r28
 41a:	8f 70       	andi	r24, 0x0F	; 15
 41c:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 420:	cf 91       	pop	r28
 422:	08 95       	ret

00000424 <Lcd4_Init>:
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 42a:	8f e3       	ldi	r24, 0x3F	; 63
 42c:	9c e9       	ldi	r25, 0x9C	; 156
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <Lcd4_Init+0xa>
 432:	00 c0       	rjmp	.+0      	; 0x434 <Lcd4_Init+0x10>
 434:	00 00       	nop
 436:	83 e0       	ldi	r24, 0x03	; 3
 438:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 43c:	8f e0       	ldi	r24, 0x0F	; 15
 43e:	97 e2       	ldi	r25, 0x27	; 39
 440:	01 97       	sbiw	r24, 0x01	; 1
 442:	f1 f7       	brne	.-4      	; 0x440 <Lcd4_Init+0x1c>
 444:	00 c0       	rjmp	.+0      	; 0x446 <Lcd4_Init+0x22>
 446:	00 00       	nop
 448:	83 e0       	ldi	r24, 0x03	; 3
 44a:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 44e:	8f ee       	ldi	r24, 0xEF	; 239
 450:	95 e5       	ldi	r25, 0x55	; 85
 452:	01 97       	sbiw	r24, 0x01	; 1
 454:	f1 f7       	brne	.-4      	; 0x452 <Lcd4_Init+0x2e>
 456:	00 c0       	rjmp	.+0      	; 0x458 <Lcd4_Init+0x34>
 458:	00 00       	nop
 45a:	83 e0       	ldi	r24, 0x03	; 3
 45c:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 460:	82 e0       	ldi	r24, 0x02	; 2
 462:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 466:	82 e0       	ldi	r24, 0x02	; 2
 468:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 46c:	88 e0       	ldi	r24, 0x08	; 8
 46e:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 472:	80 e0       	ldi	r24, 0x00	; 0
 474:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 478:	8c e0       	ldi	r24, 0x0C	; 12
 47a:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 47e:	80 e0       	ldi	r24, 0x00	; 0
 480:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 484:	86 e0       	ldi	r24, 0x06	; 6
 486:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 48a:	08 95       	ret

0000048c <Lcd4_Write_Char>:
 48c:	cf 93       	push	r28
 48e:	c8 2f       	mov	r28, r24
 490:	61 e0       	ldi	r22, 0x01	; 1
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	80 e2       	ldi	r24, 0x20	; 32
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 49c:	8c 2f       	mov	r24, r28
 49e:	82 95       	swap	r24
 4a0:	8f 70       	andi	r24, 0x0F	; 15
 4a2:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 4a6:	61 e0       	ldi	r22, 0x01	; 1
 4a8:	70 e0       	ldi	r23, 0x00	; 0
 4aa:	82 e2       	ldi	r24, 0x22	; 34
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4b2:	8f ec       	ldi	r24, 0xCF	; 207
 4b4:	97 e0       	ldi	r25, 0x07	; 7
 4b6:	01 97       	sbiw	r24, 0x01	; 1
 4b8:	f1 f7       	brne	.-4      	; 0x4b6 <Lcd4_Write_Char+0x2a>
 4ba:	00 c0       	rjmp	.+0      	; 0x4bc <Lcd4_Write_Char+0x30>
 4bc:	00 00       	nop
 4be:	60 e0       	ldi	r22, 0x00	; 0
 4c0:	70 e0       	ldi	r23, 0x00	; 0
 4c2:	82 e2       	ldi	r24, 0x22	; 34
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4ca:	8f ec       	ldi	r24, 0xCF	; 207
 4cc:	97 e0       	ldi	r25, 0x07	; 7
 4ce:	01 97       	sbiw	r24, 0x01	; 1
 4d0:	f1 f7       	brne	.-4      	; 0x4ce <Lcd4_Write_Char+0x42>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <Lcd4_Write_Char+0x48>
 4d4:	00 00       	nop
 4d6:	8c 2f       	mov	r24, r28
 4d8:	8f 70       	andi	r24, 0x0F	; 15
 4da:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 4de:	61 e0       	ldi	r22, 0x01	; 1
 4e0:	70 e0       	ldi	r23, 0x00	; 0
 4e2:	82 e2       	ldi	r24, 0x22	; 34
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4ea:	8f ec       	ldi	r24, 0xCF	; 207
 4ec:	97 e0       	ldi	r25, 0x07	; 7
 4ee:	01 97       	sbiw	r24, 0x01	; 1
 4f0:	f1 f7       	brne	.-4      	; 0x4ee <Lcd4_Write_Char+0x62>
 4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <Lcd4_Write_Char+0x68>
 4f4:	00 00       	nop
 4f6:	60 e0       	ldi	r22, 0x00	; 0
 4f8:	70 e0       	ldi	r23, 0x00	; 0
 4fa:	82 e2       	ldi	r24, 0x22	; 34
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 502:	8f ec       	ldi	r24, 0xCF	; 207
 504:	97 e0       	ldi	r25, 0x07	; 7
 506:	01 97       	sbiw	r24, 0x01	; 1
 508:	f1 f7       	brne	.-4      	; 0x506 <Lcd4_Write_Char+0x7a>
 50a:	00 c0       	rjmp	.+0      	; 0x50c <Lcd4_Write_Char+0x80>
 50c:	00 00       	nop
 50e:	cf 91       	pop	r28
 510:	08 95       	ret

00000512 <Lcd4_Write_String>:
 512:	cf 93       	push	r28
 514:	df 93       	push	r29
 516:	ec 01       	movw	r28, r24
 518:	88 81       	ld	r24, Y
 51a:	88 23       	and	r24, r24
 51c:	31 f0       	breq	.+12     	; 0x52a <Lcd4_Write_String+0x18>
 51e:	21 96       	adiw	r28, 0x01	; 1
 520:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Write_Char>
 524:	89 91       	ld	r24, Y+
 526:	81 11       	cpse	r24, r1
 528:	fb cf       	rjmp	.-10     	; 0x520 <Lcd4_Write_String+0xe>
 52a:	df 91       	pop	r29
 52c:	cf 91       	pop	r28
 52e:	08 95       	ret

00000530 <Adc32init>:



void Adc32init()
{
		DDRA= 0b00000000;
 530:	1a ba       	out	0x1a, r1	; 26
		ADMUX=0b01100000;
 532:	80 e6       	ldi	r24, 0x60	; 96
 534:	87 b9       	out	0x07, r24	; 7
		ADCSRA = (1<<ADEN);
 536:	80 e8       	ldi	r24, 0x80	; 128
 538:	86 b9       	out	0x06, r24	; 6
 53a:	08 95       	ret

0000053c <ADXLread>:


float ADXLread(int a)
{
	int x;
	ADMUX=0b01100000 + a;
 53c:	80 5a       	subi	r24, 0xA0	; 160
 53e:	87 b9       	out	0x07, r24	; 7
	ADCSRA = ADCSRA|(1<<ADSC);
 540:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1<<ADSC));
 542:	36 99       	sbic	0x06, 6	; 6
 544:	fe cf       	rjmp	.-4      	; 0x542 <ADXLread+0x6>
	x=ADCH;
 546:	65 b1       	in	r22, 0x05	; 5
	return x ;
 548:	70 e0       	ldi	r23, 0x00	; 0
 54a:	80 e0       	ldi	r24, 0x00	; 0
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	0e 94 08 05 	call	0xa10	; 0xa10 <__floatsisf>

}
 552:	08 95       	ret

00000554 <main>:



int main(void)
{
	 DDRD = 0xFF;
 554:	8f ef       	ldi	r24, 0xFF	; 255
 556:	81 bb       	out	0x11, r24	; 17
	 DDRB = 0xFF;
 558:	87 bb       	out	0x17, r24	; 23
	 DDRC = 0xFF;
 55a:	84 bb       	out	0x14, r24	; 20
	
	Adc32init();
 55c:	0e 94 98 02 	call	0x530	; 0x530 <Adc32init>
	
	
	Lcd4_Init();
 560:	0e 94 12 02 	call	0x424	; 0x424 <Lcd4_Init>
	Lcd4_Set_Cursor(1,1);
 564:	61 e0       	ldi	r22, 0x01	; 1
 566:	81 e0       	ldi	r24, 0x01	; 1
 568:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Write_String("Hand Gesture");
 56c:	80 e6       	ldi	r24, 0x60	; 96
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
	Lcd4_Set_Cursor(2,1);
 574:	61 e0       	ldi	r22, 0x01	; 1
 576:	82 e0       	ldi	r24, 0x02	; 2
 578:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Write_String("Controlled Robot");
 57c:	8d e6       	ldi	r24, 0x6D	; 109
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 584:	2f ef       	ldi	r18, 0xFF	; 255
 586:	89 e6       	ldi	r24, 0x69	; 105
 588:	98 e1       	ldi	r25, 0x18	; 24
 58a:	21 50       	subi	r18, 0x01	; 1
 58c:	80 40       	sbci	r24, 0x00	; 0
 58e:	90 40       	sbci	r25, 0x00	; 0
 590:	e1 f7       	brne	.-8      	; 0x58a <main+0x36>
 592:	00 c0       	rjmp	.+0      	; 0x594 <main+0x40>
 594:	00 00       	nop
	_delay_ms(1000);
	Lcd4_Clear();
 596:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Clear>
	Lcd4_Set_Cursor(1,1);
 59a:	61 e0       	ldi	r22, 0x01	; 1
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Write_String("By Group ");
 5a2:	8e e7       	ldi	r24, 0x7E	; 126
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
	Lcd4_Set_Cursor(2,1);
 5aa:	61 e0       	ldi	r22, 0x01	; 1
 5ac:	82 e0       	ldi	r24, 0x02	; 2
 5ae:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Write_String("55 & 56");
 5b2:	88 e8       	ldi	r24, 0x88	; 136
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
 5ba:	2f ef       	ldi	r18, 0xFF	; 255
 5bc:	89 e6       	ldi	r24, 0x69	; 105
 5be:	98 e1       	ldi	r25, 0x18	; 24
 5c0:	21 50       	subi	r18, 0x01	; 1
 5c2:	80 40       	sbci	r24, 0x00	; 0
 5c4:	90 40       	sbci	r25, 0x00	; 0
 5c6:	e1 f7       	brne	.-8      	; 0x5c0 <main+0x6c>
 5c8:	00 c0       	rjmp	.+0      	; 0x5ca <main+0x76>
 5ca:	00 00       	nop
	_delay_ms(1000);
	Lcd4_Clear();
 5cc:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Clear>
			//Robot will move in forward direction   PC1,PC3 HIGH  OTHERS LOW/
			Lcd4_Set_Cursor(1,10);
			Lcd4_Write_String("Forward");
			}else if(y_axis>20){
			PORTD= (1<<PORTD6)|PORTD;
			PORTC=0x11;//05
 5d0:	11 e1       	ldi	r17, 0x11	; 17
		
		int portd = PORTD;
		PORTC=0x00;
		PORTD=0x00;
		if (y_axis<-20){
			PORTC=0x22;//0A
 5d2:	d2 e2       	ldi	r29, 0x22	; 34
	
    /* Replace with your application code */
    while (1) 
    {
		
		x_axis = ADXLread(0);
 5d4:	80 e0       	ldi	r24, 0x00	; 0
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	0e 94 9e 02 	call	0x53c	; 0x53c <ADXLread>
		x_axis= ((x_axis-66)/39)*180 +(-90);
 5dc:	20 e0       	ldi	r18, 0x00	; 0
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	44 e8       	ldi	r20, 0x84	; 132
 5e2:	52 e4       	ldi	r21, 0x42	; 66
 5e4:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__subsf3>
 5e8:	20 e0       	ldi	r18, 0x00	; 0
 5ea:	30 e0       	ldi	r19, 0x00	; 0
 5ec:	4c e1       	ldi	r20, 0x1C	; 28
 5ee:	52 e4       	ldi	r21, 0x42	; 66
 5f0:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__divsf3>
 5f4:	20 e0       	ldi	r18, 0x00	; 0
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	44 e3       	ldi	r20, 0x34	; 52
 5fa:	53 e4       	ldi	r21, 0x43	; 67
 5fc:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__mulsf3>
 600:	20 e0       	ldi	r18, 0x00	; 0
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	44 eb       	ldi	r20, 0xB4	; 180
 606:	52 e4       	ldi	r21, 0x42	; 66
 608:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__subsf3>
 60c:	60 93 c0 00 	sts	0x00C0, r22	; 0x8000c0 <x_axis>
 610:	70 93 c1 00 	sts	0x00C1, r23	; 0x8000c1 <x_axis+0x1>
 614:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <x_axis+0x2>
 618:	90 93 c3 00 	sts	0x00C3, r25	; 0x8000c3 <x_axis+0x3>
		char *x="00000";
		itoa(x_axis,x,10);
 61c:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__fixsfsi>
 620:	dc 01       	movw	r26, r24
 622:	cb 01       	movw	r24, r22
 624:	4a e0       	ldi	r20, 0x0A	; 10
 626:	50 e0       	ldi	r21, 0x00	; 0
 628:	60 e9       	ldi	r22, 0x90	; 144
 62a:	70 e0       	ldi	r23, 0x00	; 0
 62c:	0e 94 2a 06 	call	0xc54	; 0xc54 <itoa>
		Lcd4_Set_Cursor(1,1);
 630:	61 e0       	ldi	r22, 0x01	; 1
 632:	81 e0       	ldi	r24, 0x01	; 1
 634:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
		Lcd4_Write_String("x:");
 638:	86 e9       	ldi	r24, 0x96	; 150
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
		Lcd4_Set_Cursor(2,1);
 640:	61 e0       	ldi	r22, 0x01	; 1
 642:	82 e0       	ldi	r24, 0x02	; 2
 644:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
		Lcd4_Write_String(x);
 648:	80 e9       	ldi	r24, 0x90	; 144
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
		//Lcd4_Set_Cursor(1,1);
		//Lcd4_Write_String("We rock");
		//_delay_ms(1000);
		
		
		y_axis =ADXLread(1);
 650:	81 e0       	ldi	r24, 0x01	; 1
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	0e 94 9e 02 	call	0x53c	; 0x53c <ADXLread>
		y_axis = ((y_axis-67)/38)*180 +(-90);
 658:	20 e0       	ldi	r18, 0x00	; 0
 65a:	30 e0       	ldi	r19, 0x00	; 0
 65c:	46 e8       	ldi	r20, 0x86	; 134
 65e:	52 e4       	ldi	r21, 0x42	; 66
 660:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__subsf3>
 664:	20 e0       	ldi	r18, 0x00	; 0
 666:	30 e0       	ldi	r19, 0x00	; 0
 668:	48 e1       	ldi	r20, 0x18	; 24
 66a:	52 e4       	ldi	r21, 0x42	; 66
 66c:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__divsf3>
 670:	20 e0       	ldi	r18, 0x00	; 0
 672:	30 e0       	ldi	r19, 0x00	; 0
 674:	44 e3       	ldi	r20, 0x34	; 52
 676:	53 e4       	ldi	r21, 0x43	; 67
 678:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__mulsf3>
 67c:	20 e0       	ldi	r18, 0x00	; 0
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	44 eb       	ldi	r20, 0xB4	; 180
 682:	52 e4       	ldi	r21, 0x42	; 66
 684:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__subsf3>
 688:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <y_axis>
 68c:	70 93 c5 00 	sts	0x00C5, r23	; 0x8000c5 <y_axis+0x1>
 690:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <y_axis+0x2>
 694:	90 93 c7 00 	sts	0x00C7, r25	; 0x8000c7 <y_axis+0x3>
		char *y="00000";
		itoa(y_axis,y,10);
 698:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__fixsfsi>
 69c:	dc 01       	movw	r26, r24
 69e:	cb 01       	movw	r24, r22
 6a0:	4a e0       	ldi	r20, 0x0A	; 10
 6a2:	50 e0       	ldi	r21, 0x00	; 0
 6a4:	60 e9       	ldi	r22, 0x90	; 144
 6a6:	70 e0       	ldi	r23, 0x00	; 0
 6a8:	0e 94 2a 06 	call	0xc54	; 0xc54 <itoa>
		Lcd4_Set_Cursor(1,8);
 6ac:	68 e0       	ldi	r22, 0x08	; 8
 6ae:	81 e0       	ldi	r24, 0x01	; 1
 6b0:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
		Lcd4_Write_String("y:");
 6b4:	89 e9       	ldi	r24, 0x99	; 153
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
		Lcd4_Set_Cursor(2,8);
 6bc:	68 e0       	ldi	r22, 0x08	; 8
 6be:	82 e0       	ldi	r24, 0x02	; 2
 6c0:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
		Lcd4_Write_String(y);
 6c4:	80 e9       	ldi	r24, 0x90	; 144
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
		
		int portd = PORTD;
 6cc:	c2 b3       	in	r28, 0x12	; 18
		PORTC=0x00;
 6ce:	15 ba       	out	0x15, r1	; 21
		PORTD=0x00;
 6d0:	12 ba       	out	0x12, r1	; 18
		if (y_axis<-20){
 6d2:	c0 90 c4 00 	lds	r12, 0x00C4	; 0x8000c4 <y_axis>
 6d6:	d0 90 c5 00 	lds	r13, 0x00C5	; 0x8000c5 <y_axis+0x1>
 6da:	e0 90 c6 00 	lds	r14, 0x00C6	; 0x8000c6 <y_axis+0x2>
 6de:	f0 90 c7 00 	lds	r15, 0x00C7	; 0x8000c7 <y_axis+0x3>
 6e2:	20 e0       	ldi	r18, 0x00	; 0
 6e4:	30 e0       	ldi	r19, 0x00	; 0
 6e6:	40 ea       	ldi	r20, 0xA0	; 160
 6e8:	51 ec       	ldi	r21, 0xC1	; 193
 6ea:	c7 01       	movw	r24, r14
 6ec:	b6 01       	movw	r22, r12
 6ee:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__cmpsf2>
 6f2:	88 23       	and	r24, r24
 6f4:	5c f4       	brge	.+22     	; 0x70c <main+0x1b8>
			PORTC=0x22;//0A
 6f6:	d5 bb       	out	0x15, r29	; 21
			PORTD=(1<<PORTD5)|PORTD;
 6f8:	95 9a       	sbi	0x12, 5	; 18
			//Robot will move in forward direction   PC1,PC3 HIGH  OTHERS LOW/
			Lcd4_Set_Cursor(1,10);
 6fa:	6a e0       	ldi	r22, 0x0A	; 10
 6fc:	81 e0       	ldi	r24, 0x01	; 1
 6fe:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
			Lcd4_Write_String("Forward");
 702:	8c e9       	ldi	r24, 0x9C	; 156
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
 70a:	59 c0       	rjmp	.+178    	; 0x7be <main+0x26a>
			}else if(y_axis>20){
 70c:	20 e0       	ldi	r18, 0x00	; 0
 70e:	30 e0       	ldi	r19, 0x00	; 0
 710:	40 ea       	ldi	r20, 0xA0	; 160
 712:	51 e4       	ldi	r21, 0x41	; 65
 714:	c7 01       	movw	r24, r14
 716:	b6 01       	movw	r22, r12
 718:	0e 94 b8 05 	call	0xb70	; 0xb70 <__gesf2>
 71c:	18 16       	cp	r1, r24
 71e:	5c f4       	brge	.+22     	; 0x736 <main+0x1e2>
			PORTD= (1<<PORTD6)|PORTD;
 720:	96 9a       	sbi	0x12, 6	; 18
			PORTC=0x11;//05
 722:	15 bb       	out	0x15, r17	; 21
			Lcd4_Set_Cursor(1,10);
 724:	6a e0       	ldi	r22, 0x0A	; 10
 726:	81 e0       	ldi	r24, 0x01	; 1
 728:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
			Lcd4_Write_String("Reverse");
 72c:	84 ea       	ldi	r24, 0xA4	; 164
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
 734:	44 c0       	rjmp	.+136    	; 0x7be <main+0x26a>
			//Robot will move in reverse direction  PC2 PC0 HIGH OTHERS LOW/
			}else if(x_axis>20){
 736:	c0 90 c0 00 	lds	r12, 0x00C0	; 0x8000c0 <x_axis>
 73a:	d0 90 c1 00 	lds	r13, 0x00C1	; 0x8000c1 <x_axis+0x1>
 73e:	e0 90 c2 00 	lds	r14, 0x00C2	; 0x8000c2 <x_axis+0x2>
 742:	f0 90 c3 00 	lds	r15, 0x00C3	; 0x8000c3 <x_axis+0x3>
 746:	20 e0       	ldi	r18, 0x00	; 0
 748:	30 e0       	ldi	r19, 0x00	; 0
 74a:	40 ea       	ldi	r20, 0xA0	; 160
 74c:	51 e4       	ldi	r21, 0x41	; 65
 74e:	c7 01       	movw	r24, r14
 750:	b6 01       	movw	r22, r12
 752:	0e 94 b8 05 	call	0xb70	; 0xb70 <__gesf2>
 756:	18 16       	cp	r1, r24
 758:	54 f4       	brge	.+20     	; 0x76e <main+0x21a>
			//PORTC=0x20;//08
			PORTD=(1<<PORTD5)|PORTD;
 75a:	95 9a       	sbi	0x12, 5	; 18
			//Robot will move in right direction  PC3 HIGH OTHERS LOW/
			Lcd4_Set_Cursor(1,3);
 75c:	63 e0       	ldi	r22, 0x03	; 3
 75e:	81 e0       	ldi	r24, 0x01	; 1
 760:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
			Lcd4_Write_String("Right");
 764:	8c ea       	ldi	r24, 0xAC	; 172
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
 76c:	28 c0       	rjmp	.+80     	; 0x7be <main+0x26a>
			}else if(x_axis<-20){
 76e:	20 e0       	ldi	r18, 0x00	; 0
 770:	30 e0       	ldi	r19, 0x00	; 0
 772:	40 ea       	ldi	r20, 0xA0	; 160
 774:	51 ec       	ldi	r21, 0xC1	; 193
 776:	c7 01       	movw	r24, r14
 778:	b6 01       	movw	r22, r12
 77a:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__cmpsf2>
 77e:	88 23       	and	r24, r24
 780:	5c f4       	brge	.+22     	; 0x798 <main+0x244>
			PORTC=0x02;//02
 782:	82 e0       	ldi	r24, 0x02	; 2
 784:	85 bb       	out	0x15, r24	; 21
			//PORTD=(1<<PORTD5)|PORTD;
			//Robot will move in left direction  PC1 HIGH OTHERS LOW/
			Lcd4_Set_Cursor(1,3);
 786:	63 e0       	ldi	r22, 0x03	; 3
 788:	81 e0       	ldi	r24, 0x01	; 1
 78a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
			Lcd4_Write_String("Left");
 78e:	82 eb       	ldi	r24, 0xB2	; 178
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
 796:	13 c0       	rjmp	.+38     	; 0x7be <main+0x26a>
			}else{
			PORTC=0x00;
 798:	15 ba       	out	0x15, r1	; 21
			PORTD=(0<<PORTD5)|(0<<PORTD6)|PORTD;
 79a:	82 b3       	in	r24, 0x12	; 18
 79c:	82 bb       	out	0x12, r24	; 18
			//Robot will stop , ALL ARE LOW
			Lcd4_Set_Cursor(1,3);
 79e:	63 e0       	ldi	r22, 0x03	; 3
 7a0:	81 e0       	ldi	r24, 0x01	; 1
 7a2:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
			Lcd4_Write_String("Stop");
 7a6:	87 eb       	ldi	r24, 0xB7	; 183
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
			Lcd4_Set_Cursor(1,10);
 7ae:	6a e0       	ldi	r22, 0x0A	; 10
 7b0:	81 e0       	ldi	r24, 0x01	; 1
 7b2:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
			Lcd4_Write_String("Stop");
 7b6:	87 eb       	ldi	r24, 0xB7	; 183
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
		}
		PORTD=portd;
 7be:	c2 bb       	out	0x12, r28	; 18
 7c0:	2f ef       	ldi	r18, 0xFF	; 255
 7c2:	84 e3       	ldi	r24, 0x34	; 52
 7c4:	9c e0       	ldi	r25, 0x0C	; 12
 7c6:	21 50       	subi	r18, 0x01	; 1
 7c8:	80 40       	sbci	r24, 0x00	; 0
 7ca:	90 40       	sbci	r25, 0x00	; 0
 7cc:	e1 f7       	brne	.-8      	; 0x7c6 <main+0x272>
 7ce:	00 c0       	rjmp	.+0      	; 0x7d0 <main+0x27c>
 7d0:	00 00       	nop
		Lcd4_Set_Cursor(1,10);
		Lcd4_Write_String("z:");
		Lcd4_Set_Cursor(2,10);
		Lcd4_Write_String(z);*/
		//_delay_ms(5);
		Lcd4_Clear();
 7d2:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Clear>
    }
 7d6:	fe ce       	rjmp	.-516    	; 0x5d4 <main+0x80>

000007d8 <__subsf3>:
 7d8:	50 58       	subi	r21, 0x80	; 128

000007da <__addsf3>:
 7da:	bb 27       	eor	r27, r27
 7dc:	aa 27       	eor	r26, r26
 7de:	0e 94 04 04 	call	0x808	; 0x808 <__addsf3x>
 7e2:	0c 94 7e 05 	jmp	0xafc	; 0xafc <__fp_round>
 7e6:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_pscA>
 7ea:	38 f0       	brcs	.+14     	; 0x7fa <__addsf3+0x20>
 7ec:	0e 94 77 05 	call	0xaee	; 0xaee <__fp_pscB>
 7f0:	20 f0       	brcs	.+8      	; 0x7fa <__addsf3+0x20>
 7f2:	39 f4       	brne	.+14     	; 0x802 <__addsf3+0x28>
 7f4:	9f 3f       	cpi	r25, 0xFF	; 255
 7f6:	19 f4       	brne	.+6      	; 0x7fe <__addsf3+0x24>
 7f8:	26 f4       	brtc	.+8      	; 0x802 <__addsf3+0x28>
 7fa:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_nan>
 7fe:	0e f4       	brtc	.+2      	; 0x802 <__addsf3+0x28>
 800:	e0 95       	com	r30
 802:	e7 fb       	bst	r30, 7
 804:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>

00000808 <__addsf3x>:
 808:	e9 2f       	mov	r30, r25
 80a:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__fp_split3>
 80e:	58 f3       	brcs	.-42     	; 0x7e6 <__addsf3+0xc>
 810:	ba 17       	cp	r27, r26
 812:	62 07       	cpc	r22, r18
 814:	73 07       	cpc	r23, r19
 816:	84 07       	cpc	r24, r20
 818:	95 07       	cpc	r25, r21
 81a:	20 f0       	brcs	.+8      	; 0x824 <__addsf3x+0x1c>
 81c:	79 f4       	brne	.+30     	; 0x83c <__addsf3x+0x34>
 81e:	a6 f5       	brtc	.+104    	; 0x888 <__stack+0x29>
 820:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <__fp_zero>
 824:	0e f4       	brtc	.+2      	; 0x828 <__addsf3x+0x20>
 826:	e0 95       	com	r30
 828:	0b 2e       	mov	r0, r27
 82a:	ba 2f       	mov	r27, r26
 82c:	a0 2d       	mov	r26, r0
 82e:	0b 01       	movw	r0, r22
 830:	b9 01       	movw	r22, r18
 832:	90 01       	movw	r18, r0
 834:	0c 01       	movw	r0, r24
 836:	ca 01       	movw	r24, r20
 838:	a0 01       	movw	r20, r0
 83a:	11 24       	eor	r1, r1
 83c:	ff 27       	eor	r31, r31
 83e:	59 1b       	sub	r21, r25
 840:	99 f0       	breq	.+38     	; 0x868 <__stack+0x9>
 842:	59 3f       	cpi	r21, 0xF9	; 249
 844:	50 f4       	brcc	.+20     	; 0x85a <__addsf3x+0x52>
 846:	50 3e       	cpi	r21, 0xE0	; 224
 848:	68 f1       	brcs	.+90     	; 0x8a4 <__stack+0x45>
 84a:	1a 16       	cp	r1, r26
 84c:	f0 40       	sbci	r31, 0x00	; 0
 84e:	a2 2f       	mov	r26, r18
 850:	23 2f       	mov	r18, r19
 852:	34 2f       	mov	r19, r20
 854:	44 27       	eor	r20, r20
 856:	58 5f       	subi	r21, 0xF8	; 248
 858:	f3 cf       	rjmp	.-26     	; 0x840 <__addsf3x+0x38>
 85a:	46 95       	lsr	r20
 85c:	37 95       	ror	r19
 85e:	27 95       	ror	r18
 860:	a7 95       	ror	r26
 862:	f0 40       	sbci	r31, 0x00	; 0
 864:	53 95       	inc	r21
 866:	c9 f7       	brne	.-14     	; 0x85a <__addsf3x+0x52>
 868:	7e f4       	brtc	.+30     	; 0x888 <__stack+0x29>
 86a:	1f 16       	cp	r1, r31
 86c:	ba 0b       	sbc	r27, r26
 86e:	62 0b       	sbc	r22, r18
 870:	73 0b       	sbc	r23, r19
 872:	84 0b       	sbc	r24, r20
 874:	ba f0       	brmi	.+46     	; 0x8a4 <__stack+0x45>
 876:	91 50       	subi	r25, 0x01	; 1
 878:	a1 f0       	breq	.+40     	; 0x8a2 <__stack+0x43>
 87a:	ff 0f       	add	r31, r31
 87c:	bb 1f       	adc	r27, r27
 87e:	66 1f       	adc	r22, r22
 880:	77 1f       	adc	r23, r23
 882:	88 1f       	adc	r24, r24
 884:	c2 f7       	brpl	.-16     	; 0x876 <__stack+0x17>
 886:	0e c0       	rjmp	.+28     	; 0x8a4 <__stack+0x45>
 888:	ba 0f       	add	r27, r26
 88a:	62 1f       	adc	r22, r18
 88c:	73 1f       	adc	r23, r19
 88e:	84 1f       	adc	r24, r20
 890:	48 f4       	brcc	.+18     	; 0x8a4 <__stack+0x45>
 892:	87 95       	ror	r24
 894:	77 95       	ror	r23
 896:	67 95       	ror	r22
 898:	b7 95       	ror	r27
 89a:	f7 95       	ror	r31
 89c:	9e 3f       	cpi	r25, 0xFE	; 254
 89e:	08 f0       	brcs	.+2      	; 0x8a2 <__stack+0x43>
 8a0:	b0 cf       	rjmp	.-160    	; 0x802 <__addsf3+0x28>
 8a2:	93 95       	inc	r25
 8a4:	88 0f       	add	r24, r24
 8a6:	08 f0       	brcs	.+2      	; 0x8aa <__stack+0x4b>
 8a8:	99 27       	eor	r25, r25
 8aa:	ee 0f       	add	r30, r30
 8ac:	97 95       	ror	r25
 8ae:	87 95       	ror	r24
 8b0:	08 95       	ret

000008b2 <__cmpsf2>:
 8b2:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_cmp>
 8b6:	08 f4       	brcc	.+2      	; 0x8ba <__cmpsf2+0x8>
 8b8:	81 e0       	ldi	r24, 0x01	; 1
 8ba:	08 95       	ret

000008bc <__divsf3>:
 8bc:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__divsf3x>
 8c0:	0c 94 7e 05 	jmp	0xafc	; 0xafc <__fp_round>
 8c4:	0e 94 77 05 	call	0xaee	; 0xaee <__fp_pscB>
 8c8:	58 f0       	brcs	.+22     	; 0x8e0 <__divsf3+0x24>
 8ca:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_pscA>
 8ce:	40 f0       	brcs	.+16     	; 0x8e0 <__divsf3+0x24>
 8d0:	29 f4       	brne	.+10     	; 0x8dc <__divsf3+0x20>
 8d2:	5f 3f       	cpi	r21, 0xFF	; 255
 8d4:	29 f0       	breq	.+10     	; 0x8e0 <__divsf3+0x24>
 8d6:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>
 8da:	51 11       	cpse	r21, r1
 8dc:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_szero>
 8e0:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_nan>

000008e4 <__divsf3x>:
 8e4:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__fp_split3>
 8e8:	68 f3       	brcs	.-38     	; 0x8c4 <__divsf3+0x8>

000008ea <__divsf3_pse>:
 8ea:	99 23       	and	r25, r25
 8ec:	b1 f3       	breq	.-20     	; 0x8da <__divsf3+0x1e>
 8ee:	55 23       	and	r21, r21
 8f0:	91 f3       	breq	.-28     	; 0x8d6 <__divsf3+0x1a>
 8f2:	95 1b       	sub	r25, r21
 8f4:	55 0b       	sbc	r21, r21
 8f6:	bb 27       	eor	r27, r27
 8f8:	aa 27       	eor	r26, r26
 8fa:	62 17       	cp	r22, r18
 8fc:	73 07       	cpc	r23, r19
 8fe:	84 07       	cpc	r24, r20
 900:	38 f0       	brcs	.+14     	; 0x910 <__divsf3_pse+0x26>
 902:	9f 5f       	subi	r25, 0xFF	; 255
 904:	5f 4f       	sbci	r21, 0xFF	; 255
 906:	22 0f       	add	r18, r18
 908:	33 1f       	adc	r19, r19
 90a:	44 1f       	adc	r20, r20
 90c:	aa 1f       	adc	r26, r26
 90e:	a9 f3       	breq	.-22     	; 0x8fa <__divsf3_pse+0x10>
 910:	35 d0       	rcall	.+106    	; 0x97c <__divsf3_pse+0x92>
 912:	0e 2e       	mov	r0, r30
 914:	3a f0       	brmi	.+14     	; 0x924 <__divsf3_pse+0x3a>
 916:	e0 e8       	ldi	r30, 0x80	; 128
 918:	32 d0       	rcall	.+100    	; 0x97e <__divsf3_pse+0x94>
 91a:	91 50       	subi	r25, 0x01	; 1
 91c:	50 40       	sbci	r21, 0x00	; 0
 91e:	e6 95       	lsr	r30
 920:	00 1c       	adc	r0, r0
 922:	ca f7       	brpl	.-14     	; 0x916 <__divsf3_pse+0x2c>
 924:	2b d0       	rcall	.+86     	; 0x97c <__divsf3_pse+0x92>
 926:	fe 2f       	mov	r31, r30
 928:	29 d0       	rcall	.+82     	; 0x97c <__divsf3_pse+0x92>
 92a:	66 0f       	add	r22, r22
 92c:	77 1f       	adc	r23, r23
 92e:	88 1f       	adc	r24, r24
 930:	bb 1f       	adc	r27, r27
 932:	26 17       	cp	r18, r22
 934:	37 07       	cpc	r19, r23
 936:	48 07       	cpc	r20, r24
 938:	ab 07       	cpc	r26, r27
 93a:	b0 e8       	ldi	r27, 0x80	; 128
 93c:	09 f0       	breq	.+2      	; 0x940 <__divsf3_pse+0x56>
 93e:	bb 0b       	sbc	r27, r27
 940:	80 2d       	mov	r24, r0
 942:	bf 01       	movw	r22, r30
 944:	ff 27       	eor	r31, r31
 946:	93 58       	subi	r25, 0x83	; 131
 948:	5f 4f       	sbci	r21, 0xFF	; 255
 94a:	3a f0       	brmi	.+14     	; 0x95a <__divsf3_pse+0x70>
 94c:	9e 3f       	cpi	r25, 0xFE	; 254
 94e:	51 05       	cpc	r21, r1
 950:	78 f0       	brcs	.+30     	; 0x970 <__divsf3_pse+0x86>
 952:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>
 956:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_szero>
 95a:	5f 3f       	cpi	r21, 0xFF	; 255
 95c:	e4 f3       	brlt	.-8      	; 0x956 <__divsf3_pse+0x6c>
 95e:	98 3e       	cpi	r25, 0xE8	; 232
 960:	d4 f3       	brlt	.-12     	; 0x956 <__divsf3_pse+0x6c>
 962:	86 95       	lsr	r24
 964:	77 95       	ror	r23
 966:	67 95       	ror	r22
 968:	b7 95       	ror	r27
 96a:	f7 95       	ror	r31
 96c:	9f 5f       	subi	r25, 0xFF	; 255
 96e:	c9 f7       	brne	.-14     	; 0x962 <__divsf3_pse+0x78>
 970:	88 0f       	add	r24, r24
 972:	91 1d       	adc	r25, r1
 974:	96 95       	lsr	r25
 976:	87 95       	ror	r24
 978:	97 f9       	bld	r25, 7
 97a:	08 95       	ret
 97c:	e1 e0       	ldi	r30, 0x01	; 1
 97e:	66 0f       	add	r22, r22
 980:	77 1f       	adc	r23, r23
 982:	88 1f       	adc	r24, r24
 984:	bb 1f       	adc	r27, r27
 986:	62 17       	cp	r22, r18
 988:	73 07       	cpc	r23, r19
 98a:	84 07       	cpc	r24, r20
 98c:	ba 07       	cpc	r27, r26
 98e:	20 f0       	brcs	.+8      	; 0x998 <__divsf3_pse+0xae>
 990:	62 1b       	sub	r22, r18
 992:	73 0b       	sbc	r23, r19
 994:	84 0b       	sbc	r24, r20
 996:	ba 0b       	sbc	r27, r26
 998:	ee 1f       	adc	r30, r30
 99a:	88 f7       	brcc	.-30     	; 0x97e <__divsf3_pse+0x94>
 99c:	e0 95       	com	r30
 99e:	08 95       	ret

000009a0 <__fixsfsi>:
 9a0:	0e 94 d7 04 	call	0x9ae	; 0x9ae <__fixunssfsi>
 9a4:	68 94       	set
 9a6:	b1 11       	cpse	r27, r1
 9a8:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_szero>
 9ac:	08 95       	ret

000009ae <__fixunssfsi>:
 9ae:	0e 94 97 05 	call	0xb2e	; 0xb2e <__fp_splitA>
 9b2:	88 f0       	brcs	.+34     	; 0x9d6 <__fixunssfsi+0x28>
 9b4:	9f 57       	subi	r25, 0x7F	; 127
 9b6:	98 f0       	brcs	.+38     	; 0x9de <__fixunssfsi+0x30>
 9b8:	b9 2f       	mov	r27, r25
 9ba:	99 27       	eor	r25, r25
 9bc:	b7 51       	subi	r27, 0x17	; 23
 9be:	b0 f0       	brcs	.+44     	; 0x9ec <__fixunssfsi+0x3e>
 9c0:	e1 f0       	breq	.+56     	; 0x9fa <__fixunssfsi+0x4c>
 9c2:	66 0f       	add	r22, r22
 9c4:	77 1f       	adc	r23, r23
 9c6:	88 1f       	adc	r24, r24
 9c8:	99 1f       	adc	r25, r25
 9ca:	1a f0       	brmi	.+6      	; 0x9d2 <__fixunssfsi+0x24>
 9cc:	ba 95       	dec	r27
 9ce:	c9 f7       	brne	.-14     	; 0x9c2 <__fixunssfsi+0x14>
 9d0:	14 c0       	rjmp	.+40     	; 0x9fa <__fixunssfsi+0x4c>
 9d2:	b1 30       	cpi	r27, 0x01	; 1
 9d4:	91 f0       	breq	.+36     	; 0x9fa <__fixunssfsi+0x4c>
 9d6:	0e 94 b1 05 	call	0xb62	; 0xb62 <__fp_zero>
 9da:	b1 e0       	ldi	r27, 0x01	; 1
 9dc:	08 95       	ret
 9de:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <__fp_zero>
 9e2:	67 2f       	mov	r22, r23
 9e4:	78 2f       	mov	r23, r24
 9e6:	88 27       	eor	r24, r24
 9e8:	b8 5f       	subi	r27, 0xF8	; 248
 9ea:	39 f0       	breq	.+14     	; 0x9fa <__fixunssfsi+0x4c>
 9ec:	b9 3f       	cpi	r27, 0xF9	; 249
 9ee:	cc f3       	brlt	.-14     	; 0x9e2 <__fixunssfsi+0x34>
 9f0:	86 95       	lsr	r24
 9f2:	77 95       	ror	r23
 9f4:	67 95       	ror	r22
 9f6:	b3 95       	inc	r27
 9f8:	d9 f7       	brne	.-10     	; 0x9f0 <__fixunssfsi+0x42>
 9fa:	3e f4       	brtc	.+14     	; 0xa0a <__fixunssfsi+0x5c>
 9fc:	90 95       	com	r25
 9fe:	80 95       	com	r24
 a00:	70 95       	com	r23
 a02:	61 95       	neg	r22
 a04:	7f 4f       	sbci	r23, 0xFF	; 255
 a06:	8f 4f       	sbci	r24, 0xFF	; 255
 a08:	9f 4f       	sbci	r25, 0xFF	; 255
 a0a:	08 95       	ret

00000a0c <__floatunsisf>:
 a0c:	e8 94       	clt
 a0e:	09 c0       	rjmp	.+18     	; 0xa22 <__floatsisf+0x12>

00000a10 <__floatsisf>:
 a10:	97 fb       	bst	r25, 7
 a12:	3e f4       	brtc	.+14     	; 0xa22 <__floatsisf+0x12>
 a14:	90 95       	com	r25
 a16:	80 95       	com	r24
 a18:	70 95       	com	r23
 a1a:	61 95       	neg	r22
 a1c:	7f 4f       	sbci	r23, 0xFF	; 255
 a1e:	8f 4f       	sbci	r24, 0xFF	; 255
 a20:	9f 4f       	sbci	r25, 0xFF	; 255
 a22:	99 23       	and	r25, r25
 a24:	a9 f0       	breq	.+42     	; 0xa50 <__floatsisf+0x40>
 a26:	f9 2f       	mov	r31, r25
 a28:	96 e9       	ldi	r25, 0x96	; 150
 a2a:	bb 27       	eor	r27, r27
 a2c:	93 95       	inc	r25
 a2e:	f6 95       	lsr	r31
 a30:	87 95       	ror	r24
 a32:	77 95       	ror	r23
 a34:	67 95       	ror	r22
 a36:	b7 95       	ror	r27
 a38:	f1 11       	cpse	r31, r1
 a3a:	f8 cf       	rjmp	.-16     	; 0xa2c <__floatsisf+0x1c>
 a3c:	fa f4       	brpl	.+62     	; 0xa7c <__floatsisf+0x6c>
 a3e:	bb 0f       	add	r27, r27
 a40:	11 f4       	brne	.+4      	; 0xa46 <__floatsisf+0x36>
 a42:	60 ff       	sbrs	r22, 0
 a44:	1b c0       	rjmp	.+54     	; 0xa7c <__floatsisf+0x6c>
 a46:	6f 5f       	subi	r22, 0xFF	; 255
 a48:	7f 4f       	sbci	r23, 0xFF	; 255
 a4a:	8f 4f       	sbci	r24, 0xFF	; 255
 a4c:	9f 4f       	sbci	r25, 0xFF	; 255
 a4e:	16 c0       	rjmp	.+44     	; 0xa7c <__floatsisf+0x6c>
 a50:	88 23       	and	r24, r24
 a52:	11 f0       	breq	.+4      	; 0xa58 <__floatsisf+0x48>
 a54:	96 e9       	ldi	r25, 0x96	; 150
 a56:	11 c0       	rjmp	.+34     	; 0xa7a <__floatsisf+0x6a>
 a58:	77 23       	and	r23, r23
 a5a:	21 f0       	breq	.+8      	; 0xa64 <__floatsisf+0x54>
 a5c:	9e e8       	ldi	r25, 0x8E	; 142
 a5e:	87 2f       	mov	r24, r23
 a60:	76 2f       	mov	r23, r22
 a62:	05 c0       	rjmp	.+10     	; 0xa6e <__floatsisf+0x5e>
 a64:	66 23       	and	r22, r22
 a66:	71 f0       	breq	.+28     	; 0xa84 <__floatsisf+0x74>
 a68:	96 e8       	ldi	r25, 0x86	; 134
 a6a:	86 2f       	mov	r24, r22
 a6c:	70 e0       	ldi	r23, 0x00	; 0
 a6e:	60 e0       	ldi	r22, 0x00	; 0
 a70:	2a f0       	brmi	.+10     	; 0xa7c <__floatsisf+0x6c>
 a72:	9a 95       	dec	r25
 a74:	66 0f       	add	r22, r22
 a76:	77 1f       	adc	r23, r23
 a78:	88 1f       	adc	r24, r24
 a7a:	da f7       	brpl	.-10     	; 0xa72 <__floatsisf+0x62>
 a7c:	88 0f       	add	r24, r24
 a7e:	96 95       	lsr	r25
 a80:	87 95       	ror	r24
 a82:	97 f9       	bld	r25, 7
 a84:	08 95       	ret

00000a86 <__fp_cmp>:
 a86:	99 0f       	add	r25, r25
 a88:	00 08       	sbc	r0, r0
 a8a:	55 0f       	add	r21, r21
 a8c:	aa 0b       	sbc	r26, r26
 a8e:	e0 e8       	ldi	r30, 0x80	; 128
 a90:	fe ef       	ldi	r31, 0xFE	; 254
 a92:	16 16       	cp	r1, r22
 a94:	17 06       	cpc	r1, r23
 a96:	e8 07       	cpc	r30, r24
 a98:	f9 07       	cpc	r31, r25
 a9a:	c0 f0       	brcs	.+48     	; 0xacc <__fp_cmp+0x46>
 a9c:	12 16       	cp	r1, r18
 a9e:	13 06       	cpc	r1, r19
 aa0:	e4 07       	cpc	r30, r20
 aa2:	f5 07       	cpc	r31, r21
 aa4:	98 f0       	brcs	.+38     	; 0xacc <__fp_cmp+0x46>
 aa6:	62 1b       	sub	r22, r18
 aa8:	73 0b       	sbc	r23, r19
 aaa:	84 0b       	sbc	r24, r20
 aac:	95 0b       	sbc	r25, r21
 aae:	39 f4       	brne	.+14     	; 0xabe <__fp_cmp+0x38>
 ab0:	0a 26       	eor	r0, r26
 ab2:	61 f0       	breq	.+24     	; 0xacc <__fp_cmp+0x46>
 ab4:	23 2b       	or	r18, r19
 ab6:	24 2b       	or	r18, r20
 ab8:	25 2b       	or	r18, r21
 aba:	21 f4       	brne	.+8      	; 0xac4 <__fp_cmp+0x3e>
 abc:	08 95       	ret
 abe:	0a 26       	eor	r0, r26
 ac0:	09 f4       	brne	.+2      	; 0xac4 <__fp_cmp+0x3e>
 ac2:	a1 40       	sbci	r26, 0x01	; 1
 ac4:	a6 95       	lsr	r26
 ac6:	8f ef       	ldi	r24, 0xFF	; 255
 ac8:	81 1d       	adc	r24, r1
 aca:	81 1d       	adc	r24, r1
 acc:	08 95       	ret

00000ace <__fp_inf>:
 ace:	97 f9       	bld	r25, 7
 ad0:	9f 67       	ori	r25, 0x7F	; 127
 ad2:	80 e8       	ldi	r24, 0x80	; 128
 ad4:	70 e0       	ldi	r23, 0x00	; 0
 ad6:	60 e0       	ldi	r22, 0x00	; 0
 ad8:	08 95       	ret

00000ada <__fp_nan>:
 ada:	9f ef       	ldi	r25, 0xFF	; 255
 adc:	80 ec       	ldi	r24, 0xC0	; 192
 ade:	08 95       	ret

00000ae0 <__fp_pscA>:
 ae0:	00 24       	eor	r0, r0
 ae2:	0a 94       	dec	r0
 ae4:	16 16       	cp	r1, r22
 ae6:	17 06       	cpc	r1, r23
 ae8:	18 06       	cpc	r1, r24
 aea:	09 06       	cpc	r0, r25
 aec:	08 95       	ret

00000aee <__fp_pscB>:
 aee:	00 24       	eor	r0, r0
 af0:	0a 94       	dec	r0
 af2:	12 16       	cp	r1, r18
 af4:	13 06       	cpc	r1, r19
 af6:	14 06       	cpc	r1, r20
 af8:	05 06       	cpc	r0, r21
 afa:	08 95       	ret

00000afc <__fp_round>:
 afc:	09 2e       	mov	r0, r25
 afe:	03 94       	inc	r0
 b00:	00 0c       	add	r0, r0
 b02:	11 f4       	brne	.+4      	; 0xb08 <__fp_round+0xc>
 b04:	88 23       	and	r24, r24
 b06:	52 f0       	brmi	.+20     	; 0xb1c <__fp_round+0x20>
 b08:	bb 0f       	add	r27, r27
 b0a:	40 f4       	brcc	.+16     	; 0xb1c <__fp_round+0x20>
 b0c:	bf 2b       	or	r27, r31
 b0e:	11 f4       	brne	.+4      	; 0xb14 <__fp_round+0x18>
 b10:	60 ff       	sbrs	r22, 0
 b12:	04 c0       	rjmp	.+8      	; 0xb1c <__fp_round+0x20>
 b14:	6f 5f       	subi	r22, 0xFF	; 255
 b16:	7f 4f       	sbci	r23, 0xFF	; 255
 b18:	8f 4f       	sbci	r24, 0xFF	; 255
 b1a:	9f 4f       	sbci	r25, 0xFF	; 255
 b1c:	08 95       	ret

00000b1e <__fp_split3>:
 b1e:	57 fd       	sbrc	r21, 7
 b20:	90 58       	subi	r25, 0x80	; 128
 b22:	44 0f       	add	r20, r20
 b24:	55 1f       	adc	r21, r21
 b26:	59 f0       	breq	.+22     	; 0xb3e <__fp_splitA+0x10>
 b28:	5f 3f       	cpi	r21, 0xFF	; 255
 b2a:	71 f0       	breq	.+28     	; 0xb48 <__fp_splitA+0x1a>
 b2c:	47 95       	ror	r20

00000b2e <__fp_splitA>:
 b2e:	88 0f       	add	r24, r24
 b30:	97 fb       	bst	r25, 7
 b32:	99 1f       	adc	r25, r25
 b34:	61 f0       	breq	.+24     	; 0xb4e <__fp_splitA+0x20>
 b36:	9f 3f       	cpi	r25, 0xFF	; 255
 b38:	79 f0       	breq	.+30     	; 0xb58 <__fp_splitA+0x2a>
 b3a:	87 95       	ror	r24
 b3c:	08 95       	ret
 b3e:	12 16       	cp	r1, r18
 b40:	13 06       	cpc	r1, r19
 b42:	14 06       	cpc	r1, r20
 b44:	55 1f       	adc	r21, r21
 b46:	f2 cf       	rjmp	.-28     	; 0xb2c <__fp_split3+0xe>
 b48:	46 95       	lsr	r20
 b4a:	f1 df       	rcall	.-30     	; 0xb2e <__fp_splitA>
 b4c:	08 c0       	rjmp	.+16     	; 0xb5e <__fp_splitA+0x30>
 b4e:	16 16       	cp	r1, r22
 b50:	17 06       	cpc	r1, r23
 b52:	18 06       	cpc	r1, r24
 b54:	99 1f       	adc	r25, r25
 b56:	f1 cf       	rjmp	.-30     	; 0xb3a <__fp_splitA+0xc>
 b58:	86 95       	lsr	r24
 b5a:	71 05       	cpc	r23, r1
 b5c:	61 05       	cpc	r22, r1
 b5e:	08 94       	sec
 b60:	08 95       	ret

00000b62 <__fp_zero>:
 b62:	e8 94       	clt

00000b64 <__fp_szero>:
 b64:	bb 27       	eor	r27, r27
 b66:	66 27       	eor	r22, r22
 b68:	77 27       	eor	r23, r23
 b6a:	cb 01       	movw	r24, r22
 b6c:	97 f9       	bld	r25, 7
 b6e:	08 95       	ret

00000b70 <__gesf2>:
 b70:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_cmp>
 b74:	08 f4       	brcc	.+2      	; 0xb78 <__gesf2+0x8>
 b76:	8f ef       	ldi	r24, 0xFF	; 255
 b78:	08 95       	ret

00000b7a <__mulsf3>:
 b7a:	0e 94 d0 05 	call	0xba0	; 0xba0 <__mulsf3x>
 b7e:	0c 94 7e 05 	jmp	0xafc	; 0xafc <__fp_round>
 b82:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_pscA>
 b86:	38 f0       	brcs	.+14     	; 0xb96 <__mulsf3+0x1c>
 b88:	0e 94 77 05 	call	0xaee	; 0xaee <__fp_pscB>
 b8c:	20 f0       	brcs	.+8      	; 0xb96 <__mulsf3+0x1c>
 b8e:	95 23       	and	r25, r21
 b90:	11 f0       	breq	.+4      	; 0xb96 <__mulsf3+0x1c>
 b92:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>
 b96:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_nan>
 b9a:	11 24       	eor	r1, r1
 b9c:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_szero>

00000ba0 <__mulsf3x>:
 ba0:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__fp_split3>
 ba4:	70 f3       	brcs	.-36     	; 0xb82 <__mulsf3+0x8>

00000ba6 <__mulsf3_pse>:
 ba6:	95 9f       	mul	r25, r21
 ba8:	c1 f3       	breq	.-16     	; 0xb9a <__mulsf3+0x20>
 baa:	95 0f       	add	r25, r21
 bac:	50 e0       	ldi	r21, 0x00	; 0
 bae:	55 1f       	adc	r21, r21
 bb0:	62 9f       	mul	r22, r18
 bb2:	f0 01       	movw	r30, r0
 bb4:	72 9f       	mul	r23, r18
 bb6:	bb 27       	eor	r27, r27
 bb8:	f0 0d       	add	r31, r0
 bba:	b1 1d       	adc	r27, r1
 bbc:	63 9f       	mul	r22, r19
 bbe:	aa 27       	eor	r26, r26
 bc0:	f0 0d       	add	r31, r0
 bc2:	b1 1d       	adc	r27, r1
 bc4:	aa 1f       	adc	r26, r26
 bc6:	64 9f       	mul	r22, r20
 bc8:	66 27       	eor	r22, r22
 bca:	b0 0d       	add	r27, r0
 bcc:	a1 1d       	adc	r26, r1
 bce:	66 1f       	adc	r22, r22
 bd0:	82 9f       	mul	r24, r18
 bd2:	22 27       	eor	r18, r18
 bd4:	b0 0d       	add	r27, r0
 bd6:	a1 1d       	adc	r26, r1
 bd8:	62 1f       	adc	r22, r18
 bda:	73 9f       	mul	r23, r19
 bdc:	b0 0d       	add	r27, r0
 bde:	a1 1d       	adc	r26, r1
 be0:	62 1f       	adc	r22, r18
 be2:	83 9f       	mul	r24, r19
 be4:	a0 0d       	add	r26, r0
 be6:	61 1d       	adc	r22, r1
 be8:	22 1f       	adc	r18, r18
 bea:	74 9f       	mul	r23, r20
 bec:	33 27       	eor	r19, r19
 bee:	a0 0d       	add	r26, r0
 bf0:	61 1d       	adc	r22, r1
 bf2:	23 1f       	adc	r18, r19
 bf4:	84 9f       	mul	r24, r20
 bf6:	60 0d       	add	r22, r0
 bf8:	21 1d       	adc	r18, r1
 bfa:	82 2f       	mov	r24, r18
 bfc:	76 2f       	mov	r23, r22
 bfe:	6a 2f       	mov	r22, r26
 c00:	11 24       	eor	r1, r1
 c02:	9f 57       	subi	r25, 0x7F	; 127
 c04:	50 40       	sbci	r21, 0x00	; 0
 c06:	9a f0       	brmi	.+38     	; 0xc2e <__mulsf3_pse+0x88>
 c08:	f1 f0       	breq	.+60     	; 0xc46 <__mulsf3_pse+0xa0>
 c0a:	88 23       	and	r24, r24
 c0c:	4a f0       	brmi	.+18     	; 0xc20 <__mulsf3_pse+0x7a>
 c0e:	ee 0f       	add	r30, r30
 c10:	ff 1f       	adc	r31, r31
 c12:	bb 1f       	adc	r27, r27
 c14:	66 1f       	adc	r22, r22
 c16:	77 1f       	adc	r23, r23
 c18:	88 1f       	adc	r24, r24
 c1a:	91 50       	subi	r25, 0x01	; 1
 c1c:	50 40       	sbci	r21, 0x00	; 0
 c1e:	a9 f7       	brne	.-22     	; 0xc0a <__mulsf3_pse+0x64>
 c20:	9e 3f       	cpi	r25, 0xFE	; 254
 c22:	51 05       	cpc	r21, r1
 c24:	80 f0       	brcs	.+32     	; 0xc46 <__mulsf3_pse+0xa0>
 c26:	0c 94 67 05 	jmp	0xace	; 0xace <__fp_inf>
 c2a:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_szero>
 c2e:	5f 3f       	cpi	r21, 0xFF	; 255
 c30:	e4 f3       	brlt	.-8      	; 0xc2a <__mulsf3_pse+0x84>
 c32:	98 3e       	cpi	r25, 0xE8	; 232
 c34:	d4 f3       	brlt	.-12     	; 0xc2a <__mulsf3_pse+0x84>
 c36:	86 95       	lsr	r24
 c38:	77 95       	ror	r23
 c3a:	67 95       	ror	r22
 c3c:	b7 95       	ror	r27
 c3e:	f7 95       	ror	r31
 c40:	e7 95       	ror	r30
 c42:	9f 5f       	subi	r25, 0xFF	; 255
 c44:	c1 f7       	brne	.-16     	; 0xc36 <__mulsf3_pse+0x90>
 c46:	fe 2b       	or	r31, r30
 c48:	88 0f       	add	r24, r24
 c4a:	91 1d       	adc	r25, r1
 c4c:	96 95       	lsr	r25
 c4e:	87 95       	ror	r24
 c50:	97 f9       	bld	r25, 7
 c52:	08 95       	ret

00000c54 <itoa>:
 c54:	45 32       	cpi	r20, 0x25	; 37
 c56:	51 05       	cpc	r21, r1
 c58:	20 f4       	brcc	.+8      	; 0xc62 <itoa+0xe>
 c5a:	42 30       	cpi	r20, 0x02	; 2
 c5c:	10 f0       	brcs	.+4      	; 0xc62 <itoa+0xe>
 c5e:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__itoa_ncheck>
 c62:	fb 01       	movw	r30, r22
 c64:	10 82       	st	Z, r1
 c66:	cb 01       	movw	r24, r22
 c68:	08 95       	ret

00000c6a <__itoa_ncheck>:
 c6a:	bb 27       	eor	r27, r27
 c6c:	4a 30       	cpi	r20, 0x0A	; 10
 c6e:	31 f4       	brne	.+12     	; 0xc7c <__itoa_ncheck+0x12>
 c70:	99 23       	and	r25, r25
 c72:	22 f4       	brpl	.+8      	; 0xc7c <__itoa_ncheck+0x12>
 c74:	bd e2       	ldi	r27, 0x2D	; 45
 c76:	90 95       	com	r25
 c78:	81 95       	neg	r24
 c7a:	9f 4f       	sbci	r25, 0xFF	; 255
 c7c:	0c 94 41 06 	jmp	0xc82	; 0xc82 <__utoa_common>

00000c80 <__utoa_ncheck>:
 c80:	bb 27       	eor	r27, r27

00000c82 <__utoa_common>:
 c82:	fb 01       	movw	r30, r22
 c84:	55 27       	eor	r21, r21
 c86:	aa 27       	eor	r26, r26
 c88:	88 0f       	add	r24, r24
 c8a:	99 1f       	adc	r25, r25
 c8c:	aa 1f       	adc	r26, r26
 c8e:	a4 17       	cp	r26, r20
 c90:	10 f0       	brcs	.+4      	; 0xc96 <__utoa_common+0x14>
 c92:	a4 1b       	sub	r26, r20
 c94:	83 95       	inc	r24
 c96:	50 51       	subi	r21, 0x10	; 16
 c98:	b9 f7       	brne	.-18     	; 0xc88 <__utoa_common+0x6>
 c9a:	a0 5d       	subi	r26, 0xD0	; 208
 c9c:	aa 33       	cpi	r26, 0x3A	; 58
 c9e:	08 f0       	brcs	.+2      	; 0xca2 <__utoa_common+0x20>
 ca0:	a9 5d       	subi	r26, 0xD9	; 217
 ca2:	a1 93       	st	Z+, r26
 ca4:	00 97       	sbiw	r24, 0x00	; 0
 ca6:	79 f7       	brne	.-34     	; 0xc86 <__utoa_common+0x4>
 ca8:	b1 11       	cpse	r27, r1
 caa:	b1 93       	st	Z+, r27
 cac:	11 92       	st	Z+, r1
 cae:	cb 01       	movw	r24, r22
 cb0:	0c 94 5a 06 	jmp	0xcb4	; 0xcb4 <strrev>

00000cb4 <strrev>:
 cb4:	dc 01       	movw	r26, r24
 cb6:	fc 01       	movw	r30, r24
 cb8:	67 2f       	mov	r22, r23
 cba:	71 91       	ld	r23, Z+
 cbc:	77 23       	and	r23, r23
 cbe:	e1 f7       	brne	.-8      	; 0xcb8 <strrev+0x4>
 cc0:	32 97       	sbiw	r30, 0x02	; 2
 cc2:	04 c0       	rjmp	.+8      	; 0xccc <strrev+0x18>
 cc4:	7c 91       	ld	r23, X
 cc6:	6d 93       	st	X+, r22
 cc8:	70 83       	st	Z, r23
 cca:	62 91       	ld	r22, -Z
 ccc:	ae 17       	cp	r26, r30
 cce:	bf 07       	cpc	r27, r31
 cd0:	c8 f3       	brcs	.-14     	; 0xcc4 <strrev+0x10>
 cd2:	08 95       	ret

00000cd4 <_exit>:
 cd4:	f8 94       	cli

00000cd6 <__stop_program>:
 cd6:	ff cf       	rjmp	.-2      	; 0xcd6 <__stop_program>
